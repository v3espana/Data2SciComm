#will not print because this is only assignment --> will show up in environment
chick_clean
chick_clean %>%
distinct(chick_id)
chick_clean %>%
arrange(chick_id)
chick_clean
chick_clean %>%
mutate(weight_lbs = weight_gm/453.6) #mutate will always add to end of dataset
42/453.6
chick_clean %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet) %>%
summarize(n = n(),
mean_wgt_gm = mean(weight_gm,),
mean_wgt_lbs =mean(weight_lbs))
chick_clean %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet, age_days == 20) %>%
summarize(n = n(),
mean_wgt_gm = mean(weight_gm,),
mean_wgt_lbs =mean(weight_lbs))
chick_clean %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet, age_days) %>%
summarize(n = n(),
mean_wgt_gm = mean(weight_gm,),
mean_wgt_lbs =mean(weight_lbs))
chick_clean %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet, age_days) %>%
summarize(n = n(),
mean_wgt_gm = mean(weight_gm,),
mean_wgt_lbs =mean(weight_lbs)) %>%
filter(age_days == 20)
chick_clean %>%
filter(age_days == 20) %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet, age_days) %>%
summarize(n = n(),
mean_wgt_gm = mean(weight_gm,),
mean_wgt_lbs =mean(weight_lbs))
chick_clean %>%
filter(age_days == 20) %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet) %>%
summarize(n = n(),
mean_wgt_gm = mean(weight_gm,),
mean_wgt_lbs =mean(weight_lbs))
mtcars_modified <- read_csv(mtcars_fromR_rownames.csv)
mtcars_modified <- read_csv("mtcars_fromR_rownames.csv")
glimpse(mtcars_modified)
billboard
head(billboard)
head("billboard")
billboard
library(tidyverse)
billboard
billboard %>%
pivot_longer(wk1:wk76)
billboard
billboard_longer <- billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
values_to = "position")
billboard_long %>%
pivot_wider()
billboard_longer %>%
pivot_wider()
billboard_longer %>%
pivot_wider(names_from = "week",
values_from = "position")
?pivot_longer
billboard_longer <- billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
values_to = "position"
names_prefix = "wk")
billboard_longer <- billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
values_to = "position",
names_prefix = "wk")
billboard_longer <- billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
values_to = "position",
names_prefix = "wk")
billboard_longer
billboard_longer <- billboard %>%
pivot_longer(cols = starts_with("wk"),
names_to = "week",
values_to = "position",
names_prefix = "wk",
values_drop_na = TRUE)
billboard_longer
billboard %>%
separate(col = date.entered,
into = c("year", "month", "day"))
billboard %>%
unite(col = "full_date",
c(year, month, day))
billboard %>%
unite(col = "full_date",
c("year", "month", "day"))
billboard %>%
unite(col = "full_date",
into = c("year", "month", "day"))
billboard %>%
unite(col = "full_date",
into = c(year, month, day))
billboard %>%
unite(col = "date",
into = c(year, month day))
billboard %>%
unite(col = "date",
into = c(year, month, day))
billboard %>%
unite(col = c(year, month, day),
into = "date")
library(tidyverse)
ChickWeight %>%
ggplot()
ChickWeight %>%
ggplot(aes(x = weight)) # provide the aesthetic mapping
ChickWeight %>%
ggplot(aes(x = weight)) # provide the aesthetic mapping
+ geom_histogram()
ChickWeight %>%
ggplot(aes(x = weight)) + # provide the aesthetic mapping
geom_histogram()
ChickWeight %>%
ggplot(aes(y = weight,
x = time)) +
geom_plot()
ChickWeight %>%
ggplot(aes(y = weight,
x = time)) +
geom_pointt()
ChickWeight %>%
ggplot(aes(y = weight,
x = time)) +
geom_point()
ChickWeight %>%
ggplot(aes(y = weight,
x = Time)) +
geom_point()
ChickWeight %>%
ggplot(aes(y = weight,
x = Time)
color = Diet) +
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,)
color = Diet) +
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,)
color = Diet) +
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,)
color = diet) +
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = diet)) +
geom_point()
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_point()
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_point() + geom_smooth()
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_point(alpha = 0.5) + # make a lil transparent
geom_smooth(se = FALSE) + #remove error bands
theme_minimal() + # using a premade theme to change appearance
labs(y = "weight in grams", x = "days since birth")
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_point(alpha = 0.5) + # make a lil transparent
geom_smooth(se = FALSE) + #remove error bands
theme_minimal() + # using a premade theme to change appearance
labs(y = "weight in grams",
x = "days since birth",
title = "weight over time across diets")
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_point(alpha = 0.5) + # make a lil transparent
geom_smooth(se = FALSE) + #remove error bands
theme_minimal() + # using a premade theme to change appearance
labs(y = "weight in grams",
x = "days since birth",
title = "Weight Over Time Across Diets")
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_point(alpha = 0.5) + # make a lil transparent
geom_smooth(se = FALSE) + #remove error bands
theme_minimal() + # using a premade theme to change appearance
facet_grid(~Diet) +
labs(y = "weight in grams",
x = "days since birth",
title = "Weight Over Time Across Diets")
ChickWeight %>%
ggplot(aes(y = weight,
x = Time,
color = Diet)) +
geom_boxplot(alpha = 0.5) + # make a lil transparent
#geom_smooth(se = FALSE) + #remove error bands
theme_minimal() + # using a premade theme to change appearance
facet_grid(~Diet) +
labs(y = "weight in grams",
x = "days since birth",
title = "Weight Over Time Across Diets")
ggsave("chick_weightovertime.png", width = 9 , length = 8)
library(tidyverse)
library(tidyverse)
MFID_analogy_read <- read_csv("/Users/vince/OneDrive/Documents/GitHub/Data2SciComm/WeeklyAssignments/tidy_data/MFIndD_analogy.csv")
MFID_analogy_read
MFID_analogy_read %>%
distinct(qualtrics_id) %>%
count()
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
summarize(n_trials = n())
library(tidyverse)
#1
MFID_analogy_read
summary_MFID <- MFID_analogy_read %>%
group_by(qualtrics_id) %>%
summarize(relational_matches = sum(respone_type == "Rel"))
summary_MFID <- MFID_analogy_read %>%
group_by(qualtrics_id) %>%
summarize(relational_matches = sum(response_type == "Rel"))
summary_MFID <- MFID_analogy_read %>%
group_by(qualtrics_id) %>%
summarize(relational_matches = sum(response_type == "Rel"))
summary_MFID <- MFID_analogy_read %>%
group_by(qualtrics_id) %>%
summarize(relational_matches = sum(response_type == "Rel"))
summary_MFID
summary_MFID %>%
ggplot(aes(x = relational_matches)) +
geom_histogram(binwidth = 1, fill = "gray", color = "black") +
labs(title = "Distribution of Relational Matches",
x = "Number of Relational Matches",
y = "Number of Participants")
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-`match_type_0`, -match_type_1, -response)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-`match_type_0`, -match_type_1, -response) %>%
select(1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-`match_type_0`, -match_type_1, -response, 1, 2, 3, 4, 5, 6, 7, 8) %>%
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-`match_type_0`, -match_type_1, -response) %>%
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-match_type_0, -match_type_1, -response) %>%
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-match_type_0, -match_type_1, -response) %>% select(1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-match_type_0, -match_type_1, -response, 1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-match_type_0, -match_type_1, -response,)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response)
select(trial 1, trial 2, trial 3, trial 4, trial 5, trial 6, trial 7, trial 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response)
select("trial 1", trial 2, trial 3, trial 4, trial 5, trial 6, trial 7, trial 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response) %>%
select(trial 1, trial 2, trial 3, trial 4, trial 5, trial 6, trial 7, trial 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response) %>%
select("trial 1", "trial 2", "trial 3", "trial 4", "trial 5", "trial 6", "trial 7", "trial 8")
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>% #add trial prefix for specificity
select(-match_type_0, -match_type_1, -response) %>% #remove these columns
select(MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response) %>%
select(1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>% #add trial prefix for specificity
select(-match_type_0, -match_type_1, -response) %>% #remove these columns
select(MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>%
select(-match_type_0, -match_type_1, -response) %>%
select(1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type,
names_prefix = "trial ") %>% #add trial prefix for specificity
select(-match_type_0, -match_type_1, -response) %>% #remove these columns
select(1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-match_type_0, -match_type_1, -response) %>% #remove these columns
select(1, 2, 3, 4, 5, 6, 7, 8)
MFID_analogy_read %>%
group_by(qualtrics_id) %>%
pivot_wider(names_from = trial_number,
values_from = response_type) %>%
select(-match_type_0, -match_type_1, -response) %>% #remove these columns
select("1", "2", "3", "4", "5", "6", "7", "8")
my_double <- 12.9
typeof(my_double)
as.integer(my_double) #truncate not round
as.character(my_double)
as.numeric("12") #digits can parse into numbers
2==NA #result is NA (does not know) - does not know if it is equal to 2 because it does not know if it is
NA==NA
my_values <- c(1,3,5,NA,8,10)
mean(my_values)
#typically can override this by adding a na.rm = TRUE argument to remove the NAs
mean(my_values, na.rm = TRUE) #ignore NA
(4 / 3) < 0 && (8 + 1 - 6) == 2
(5 / 2) == 1 | (2 / 1) > 0
(4 * (5-3)) < 10 || (10 / 2) > 4
is.numeric(mean(c(12,31,15.57,4)))
#TRUE would mean that the mean of those numbers is a numeric in R
((5/2) == 2.5) & TRUE | NA
(4 / 3) > 0 && (8 + 1 - 6) == 2
(5 / 2) == 1 | (2 / 1) > 0
(4 * (5-3)) < 10 || (10 / 2) > 4
is.numeric(mean(c(12,31,15.57,4)))
#TRUE would mean that the mean of those numbers is a numeric in R
((5/2) == 2.5) & TRUE | NA
(4 / 3) > 0 && (8 + 1 - 7) == 2
(5 / 2) == 1 | (2 / 1) > 0
(4 * (5-3)) < 10 || (10 / 2) > 4
is.numeric(mean(c(12,31,15.57,4)))
#TRUE would mean that the mean of those numbers is a numeric in R
((5/2) == 2.5) & TRUE | NA
(4 / 3) > 0 && (8 + 1 - 7) == 2
(5 / 2) == 1 | (2 / 1) > 0
(4 * (5-3)) < 10 || (10 / 2) > 4
is.numeric(mean(c(38,12,123.7,4.32)))
#TRUE would mean that the mean of those numbers is a numeric in R
((7/2) == 3.5) & TRUE | NA
(4 / 3) > 0 && (8 + 1 - 7) == 2
(5 / 2) == 1 | (2 / 1) > 0
(5 * (5-3)) == 10 || (10 / 2) < 4
is.numeric(mean(c(38,12,123.7,4.32)))
#TRUE would mean that the mean of those numbers is a numeric in R
((7/2) == 3.5) & TRUE | NA
(3 / 4) > 0 && (8 + 1 - 7) == 2
(5 / 2) == 1 | (2 / 1) > 0 # evaluates all
(5 * (5-3)) == 10 || (10 / 2) < 4 # evaluates until one
is.numeric(mean(c(38,12,123.7,4.32)))
#TRUE would mean that the mean of those numbers is a numeric in R
((7/2) == 3.5) & TRUE | NA
NA & TRUE # NA since NA is neither TRUE or FALSE
NA & NA # NA
c("1", 2, 3 ,4)
c(2, 3, 4)
my_list <- list("letters" = c("A", "L", "J", "H"),
"numbers" = 4:8,
"more_numbers" = 10:30)
my_list <- list("letters" = c("A", "L", "J", "H"),
"numbers" = 4:8,
"more_numbers" = 10:30)
my_list
my_list <- list("letters" = c("A", "L", "J", "H"),
"numbers" = 4:8,
"more_numbers" = 10:30)
my_list
library(tidyverse)
age_data <- tribble(
~id, ~age,
1, 8,
2, 10,
3, 8,
5, 9
)
gender_data <- tribble(
~id, ~gender
1, "f",
age_data <- tribble(
~id, ~age,
1, 8,
2, 10,
3, 8,
5, 9
)
gender_data <- tribble(
~id, ~gender,
1, "f",
2, "m",
3, "nb",
4, "m",
5, "f"
)
age_data <- tribble(
~id, ~age,
1, 8,
2, 10,
3, 8,
5, 9
)
gender_data <- tribble(
~id, ~gender,
1, "f",
2, "m",
3, "nb",
4, "m",
6, "f"
)
age_data <- tribble(
~id, ~age,
1, 8,
2, 10,
3, 8,
5, 9
)
gender_data <- tribble(
~id, ~gender,
1, "f",
2, "m",
3, "nb",
4, "m",
6, "f"
)
age_data
gender_data
full_join(age_data, gender_data)
full_join(age_data, gender_data_BADID, by ~ join_by("id_x" == "id"))
full_join(age_data, gender_data, by ~ join_by("id_x" == "id"))
full_join(age_data, gender_data, "by" ~ join_by("id_x" == "id"))
full_join(age_data, gender_data)
bind_cols(age_data, gender_data)
bind_rows(age_data, gender_data)
