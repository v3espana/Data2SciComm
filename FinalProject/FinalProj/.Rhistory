knitr::opts_chunk$set(echo = FALSE)
# remove major outliers for each sensor
plot1_cleaned <- data %>%
pivot_longer(cols = -eyeDetection, names_to = "Sensor", values_to = "Value") %>%
group_by(Sensor) %>%
mutate(Q1 = quantile(Value, 0.01, na.rm = TRUE),
Q3 = quantile(Value, 0.99, na.rm = TRUE),
IQR = Q3 - Q1,
lower_bound = Q1 - 1.5 * IQR,
upper_bound = Q3 + 1.5 * IQR) %>%
filter(Value >= lower_bound & Value <= upper_bound) %>%
ungroup() %>%
mutate(eyeDetection = factor(eyeDetection, levels = c(0, 1), labels = c("Open", "Closed")))
library(tidyverse)
library(knitr)
library(foreign)
library(ggplot2)
data <- read.arff("/Users/vince/OneDrive/Documents/GitHub/Data2SciComm/FinalProject/eyestate.arff")
# remove major outliers for each sensor
plot1_cleaned <- data %>%
pivot_longer(cols = -eyeDetection, names_to = "Sensor", values_to = "Value") %>%
group_by(Sensor) %>%
mutate(Q1 = quantile(Value, 0.01, na.rm = TRUE),
Q3 = quantile(Value, 0.99, na.rm = TRUE),
IQR = Q3 - Q1,
lower_bound = Q1 - 1.5 * IQR,
upper_bound = Q3 + 1.5 * IQR) %>%
filter(Value >= lower_bound & Value <= upper_bound) %>%
ungroup() %>%
mutate(eyeDetection = factor(eyeDetection, levels = c(0, 1), labels = c("Open", "Closed")))
# calculate group means
sensor_means <- plot1_cleaned %>%
group_by(eyeDetection, Sensor) %>%
summarise(Mean = mean(Value, na.rm = TRUE), .groups = "drop")
# plot the means
ggplot(plot1_cleaned, aes(x = Sensor, y = Value, color = eyeDetection)) +
# add points for the means
geom_point(data = sensor_means, aes(x = Sensor, y = Mean, color = eyeDetection),
size = 4, stroke = 1.5, position = position_dodge(width = 0.5)) +
labs(title = "Comparison of Mean Sensor Values by Eye State",
x = "EEG Sensor",
y = "EEG Signal Value (μV)",
color = "Eye State",
shape = "Eye State") +
scale_color_manual(name = "Eye State",
labels = c("Open (0)", "Closed (1)"),
values = c("red", "cyan"))+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text = element_text(size = 20),
legend.position = "top",
legend.title = element_text(face = "bold"),
plot.background = element_rect(color = "black", linewidth = 1)
)
# filter for closed
closed_data <- data[data$eyeDetection == 1, ]
# filter for open
open_data <- data[data$eyeDetection == 0, ]
# set bounds for closed O1
Q1 <- quantile(closed_data$O1, 0.01)
Q3 <- quantile(closed_data$O1, 0.99)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# hold the cleaned data in new variable
closedO1data_cleaned <- closed_data[closed_data$O1 >= lower_bound & closed_data$O1 <= upper_bound, ]
# set bounds for open O1
Q1 <- quantile(open_data$O1, 0.01)
Q3 <- quantile(open_data$O1, 0.99)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# hold the cleaned data in new variable
openO1data_cleaned <- open_data[open_data$O1 >= lower_bound & open_data$O1 <= upper_bound, ]
# set bounds for closed O2
Q1 <- quantile(closed_data$O2, 0.01)
Q3 <- quantile(closed_data$O2, 0.99)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# hold the cleaned data in new variable
closedO2data_cleaned <- closed_data[closed_data$O2 >= lower_bound & closed_data$O2 <= upper_bound, ]
# set bounds for open O2
Q1 <- quantile(open_data$O2, 0.01)
Q3 <- quantile(open_data$O2, 0.99)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# hold the cleaned data in new variable
openO2data_cleaned <- open_data[open_data$O2 >= lower_bound & open_data$O2 <= upper_bound, ]
# calculating min, max, mean for O1 closed
closedO1_min <- min(closedO1data_cleaned$O1, na.rm = TRUE)
closedO1_max <- max(closedO1data_cleaned$O1, na.rm = TRUE)
closedO1_mean <- mean(closedO1data_cleaned$O1, na.rm = TRUE)
closedO1_std <- sd(closedO1data_cleaned$O1, na.rm = TRUE)
# calculating min, max, mean for O1 open
openO1_min <- min(openO1data_cleaned$O1, na.rm = TRUE)
openO1_max <- max(openO1data_cleaned$O1, na.rm = TRUE)
openO1_mean <- mean(openO1data_cleaned$O1, na.rm = TRUE)
openO1_std <- sd(openO1data_cleaned$O1, na.rm = TRUE)
# calculating min, max, mean for O2 closed
closedO2_min <- min(closedO2data_cleaned$O2, na.rm = TRUE)
closedO2_max <- max(closedO2data_cleaned$O2, na.rm = TRUE)
closedO2_mean <- mean(closedO2data_cleaned$O2, na.rm = TRUE)
closedO2_std <- sd(closedO2data_cleaned$O2, na.rm = TRUE)
# calculating min, max, mean for O2 open
openO2_min <- min(openO2data_cleaned$O2, na.rm = TRUE)
openO2_max <- max(openO2data_cleaned$O2, na.rm = TRUE)
openO2_mean <- mean(openO2data_cleaned$O2, na.rm = TRUE)
openO2_std <- sd(openO2data_cleaned$O2, na.rm = TRUE)
# make the table
table <- as.table(rbind(c(openO1_min, openO1_max, openO1_mean, openO1_std),
c(closedO1_min, closedO1_max, closedO1_mean, closedO1_std),
c(openO2_min, openO2_max, openO2_mean, openO2_std),
c(closedO2_min, closedO2_max, closedO2_mean, closedO2_std)))
dimnames(table) <- list(Sensor = c("O1 Open", "O1 Closed", "O2 Open", "O2 Closed"),
Metric = c("Min.", "Max.", "Mean", "Std. Dev."))
kable(table, caption = "Summary Statistics for Sensors O1 and O2")
#there are some outliers in the data set that are affecting my plots
#taking out the outliers
#setting ranges for the quartiles
Q1 <- quantile(data$AF3, 0.01)
Q3 <- quantile(data$AF3, 0.99)
IQR <- Q3 - Q1
#set the bounds
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
#hold the cleaned data in new variable
plot2_cleaned <- data[data$AF3 >= lower_bound & data$AF3 <= upper_bound, ]
plot2_cleaned %>%
ggplot(aes(x = eyeDetection, y = AF3, fill = eyeDetection)) +
geom_violin(alpha = 0.4) +  # add a violin plot for
geom_boxplot(width = 0.2, outlier.shape = NA) +  # make boxplot smaller
labs(title = "EEG Sensor (AF3) Distribution by Eye State",
x = "Eye Detection",
y = "EEG Signal Value (μV)") +
scale_fill_manual(name = "Eye State",
labels = c("Open (0)", "Closed (1)"),
values = c("red", "cyan")) +
theme_minimal() +
theme(text = element_text(size = 20),
legend.position = "top",
legend.title = element_text(face = "bold"),
plot.background = element_rect(color = "black", linewidth = 1)
)
