for (i in seq_along(MFID$condition)){
subset <- filtered_data[filtered_data$condition == conditions[i], ]
# Calculate the mean reaction time for the current condition
mean_reaction_times[i] <- mean(subset$rt, na.rm = TRUE)
}
dot_sep_total <- 0
dot_rand_total <- 0
shifted_total <- 0
stacked_total <- 0
for (i in seq_along(MFID_prob$condition)){
subset <- filtered_data[filtered_data$condition == conditions[i], ]
# Calculate the mean reaction time for the current condition
mean_reaction_times[i] <- mean(subset$rt, na.rm = TRUE)
}
dot_sep_total <- 0
dot_rand_total <- 0
shifted_total <- 0
stacked_total <- 0
for (i in seq_along(MFID_prob$condition)){
subset <- MFID_prob[MFID_prob$condition == conditions[i], ]
# Calculate the mean reaction time for the current condition
mean_reaction_times[i] <- mean(subset$rt, na.rm = TRUE)
}
dot_sep_total <- 0
dot_rand_total <- 0
shifted_total <- 0
stacked_total <- 0
for (i in seq_along(MFID_prob$condition)){
subset <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_reaction_times[i] <- mean(subset$rt, na.rm = TRUE)
}
dot_sep_total <- 0
dot_rand_total <- 0
shifted_total <- 0
stacked_total <- 0
for (i in seq_along(MFID_prob$condition)){
subset <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_vec[i] <- mean(subset$rt, na.rm = TRUE)
}
dot_sep_total <- 0
dot_rand_total <- 0
shifted_total <- 0
stacked_total <- 0
for (i in seq_along(MFID_prob$condition)){
dot_sep_total = case_when(MFID_prob$condition == "dots_EqSizeSep" ~ dot_sep_total + MFID_prob$rt,
MFID_prob$condition == "dots_EqSizeRand" ~ dot_rand_total + MFID_prob$rt,
MFID_prob$condition == "blob_shifted" ~ shifted_total + MFID_prob$rt,
MFID_prob$condition == "blob_stacked" ~ stack_total + MFID_prob$rt
)
}
dot_sep_total <- 0
dot_rand_total <- 0
shifted_total <- 0
stacked_total <- 0
for (i in seq_along(MFID_prob$condition)){
dot_sep_total = case_when(MFID_prob$condition == "dots_EqSizeSep" ~ dot_sep_total + MFID_prob$rt,
MFID_prob$condition == "dots_EqSizeRand" ~ dot_rand_total + MFID_prob$rt,
MFID_prob$condition == "blob_shifted" ~ shifted_total + MFID_prob$rt,
MFID_prob$condition == "blob_stacked" ~ stacked_total + MFID_prob$rt
)
}
for (i in seq_along(condition)){
sub_condition <- MFID_prob[MFID_prob$condition == conditions[i], ]
# Calculate the mean reaction time for the current condition
mean_reaction_times[i] <- mean(subset$rt)
}
for (i in seq_along(condition)){
sub_condition <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_reaction_times[i] <- mean(subset$rt)
}
for (i in seq_along(condition)){
sub_condition <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_vec[i] <- mean(subset$rt)
}
for (i in seq_along(condition)){
sub_condition <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_vec[i] <- mean(subset$rt)
}
mean_vec
for (i in seq_along(condition)){
sub_condition <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_vec[i] <- mean(subset$rt, na.rm = TRUE)
}
for (i in seq_along(condition)){
sub_condition <- MFID_prob[MFID_prob$condition == condition[i], ]
# Calculate the mean reaction time for the current condition
mean_vec[i] <- mean(subset$rt, na.rm = TRUE)
}
mean_vec
for (i in seq_along(condition)){
cond_name <- condition[i]
sub_condition <- MFID_prob[MFID_prob$condition == cond_name, ]
# Calculate the mean reaction time for the current condition
mean_vec[i] <- mean(subset$rt, na.rm = TRUE)
}
mean_vec
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
MFID_prob %>%
distinct(rt_exclu)
conditions <- unique(MFID_prob$condition)
conditions # vector to store conditions
mean_vec <- numeric(length(condition))
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
for(condition in conditions) {
mean_rt <- valid_rt %>%
group_by_at(condition) # stored indirectly
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
for(condition in conditions) {
mean_rt <- valid_rt %>%
group_by_at(condition) # stored indirectly
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(condition in conditions) {
mean_rt <- valid_rt %>%
group_by_at(condition) # stored indirectly
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(condition in conditions) {
mean_rt <- valid_rt %>%
group_by(condition) # stored indirectly
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(condition in conditions) {
mean_rt <- valid_rt %>%
group_by_at(condition) # stored indirectly
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by_at(i)
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by_at(i) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
mean_rt
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt_sep <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_rand <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_shift <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_stack <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
mean_rt <- c(mean_rt_sep, mean_rt_rand, mean_rt_shift, mean_rt_stack)
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt_sep <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_rand <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_shift <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_stack <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
mean_rt <- c(mean_rt_sep, mean_rt_rand, mean_rt_shift, mean_rt_stack)
mean_rt
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt_sep <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_rand <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_shift <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt_stack <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
mean_rt <- c(mean_rt_sep, mean_rt_rand, mean_rt_shift, mean_rt_stack)
mean_rt
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
mean_rt
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
mean_rt <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
mean_rt <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
mean_rt <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
}
mean_rt
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by("dots_EqSizeSep") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
mean_rt <- valid_rt %>%
group_by("dots_EqSizeRand") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
mean_rt <- valid_rt %>%
group_by("blob_shifted") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
mean_rt <- valid_rt %>%
group_by("blob_stacked") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
mean_rt
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by(i) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by_all(i) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
valid_rt <- MFID_prob %>%
filter(rt_exclu == 0)
valid_rt
for(i in conditions) {
mean_rt <- valid_rt %>%
group_by_at(i) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
}
mean_rt <- numeric(length(conditions))
for (i in 1:length(conditions)) {
condition_data <- data[data$condition == conditions[i], ]
mean_reaction_times[i] <- mean(condition_data$rt, na.rm = TRUE)  # calculate the mean, removing NA values
}
mean_rt <- numeric(length(conditions))
for (i in 1:length(conditions)) {
condition_data <- MFID_prob[MFID_prob$condition == conditions[i], ]
mean_reaction_times[i] <- mean(condition_data$rt, na.rm = TRUE)  # calculate the mean, removing NA values
}
mean_rt <- numeric(length(conditions))
for (i in 1:length(conditions)) {
condition_data <- MFID_prob[MFID_prob$condition == conditions[i], ]
mean_rt[i] <- mean(condition_data$rt, na.rm = TRUE)  # calculate the mean, removing NA values
}
# Step 5: Output the mean reaction times
mean_reaction_times
mean_rt <- numeric(length(conditions))
for (i in 1:length(conditions)) {
condition_data <- MFID_prob[MFID_prob$condition == conditions[i], ]
mean_rt[i] <- mean(condition_data$rt, na.rm = TRUE)  # calculate the mean, removing NA values
}
# Step 5: Output the mean reaction times
mean_rt
mean_rt <- numeric(length(conditions))
#filter invalid trials
valid_trials <- MFID_prob %>%
filter(rt_exclu == 0)
for (i in 1:length(conditions)) {
condition_data <- valid_trials[valid_trials$condition == conditions[i], ] #only keeping the columns that match the condition in conditions
mean_rt[i] <- mean(condition_data$rt, na.rm = TRUE) #put the calculated mean in the mean_rt vector
}
# Step 5: Output the mean reaction times
mean_rt
summary_across <- valid_trials %>%
group_by(across(everything())) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(correct == TRUE, na.rm = TRUE)
summary_across <- valid_trials %>%
group_by(across(condtitions)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
summary_across <- valid_trials %>%
group_by(across(condtition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
summary_across <- valid_trials %>%
group_by(condtitions) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
summary_across <- valid_trials %>%
group_by("condtition") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(correct == TRUE, na.rm = TRUE)
summary_across <- valid_trials %>%
group_by("condtition") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == TRUE, na.rm = TRUE)
summary_across
summary_across <- valid_trials %>%
separate("condition")%>%
group_by("condtition") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
summary_across <- valid_trials %>%
distinct("condition")%>%
group_by("condtition") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == TRUE, na.rm = TRUE)
summary_across
summary_across <- valid_trials %>%
group_by("condtition") %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == TRUE, na.rm = TRUE)
summary_across
summary_across <- valid_trials %>%
group_by(condtition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
summary_across <- valid_trials %>%
group_by(across(condtition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == TRUE, na.rm = TRUE)
summary_across
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == TRUE, na.rm = TRUE)
summary_without
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == TRUE, na.rm = TRUE)
summary_without
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == "TRUE", na.rm = TRUE)
summary_across
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct == "TRUE", na.rm = TRUE)
summary_without
str(valid_trials$correct)
str(valid_trials$correct)
unique(valid_trials$correct)
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct, na.rm = TRUE)
summary_across
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct, na.rm = TRUE)
summary_without
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE)) %>%
mutate(overall_accuracy = mean(valid_trials$correct, na.rm = TRUE))
summary_without
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE))
overall_accuracy = mean(valid_trials$correct, na.rm = TRUE)
summary_across
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE)) %>%
mutate(overall_accuracy = mean(valid_trials$correct, na.rm = TRUE))
summary_across
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE),
overall_accuracy = mean(valid_trials$correct, na.rm = TRUE))
summary_across
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE),
overall_accuracy = mean(valid_trials$correct, na.rm = TRUE))
summary_across
summary_across <- valid_trials %>%
group_by(across(condition)) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE),
overall_accuracy = mean(correct, na.rm = TRUE))
summary_across
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE),
overall_accuracy = mean(valid_trials$correct, na.rm = TRUE))
summary_without
summary_without <- summary_across <- valid_trials %>%
group_by(condition) %>%
summarize(mean_rt = mean(rt, na.rm = TRUE),
overall_accuracy = mean(correct, na.rm = TRUE))
summary_without
